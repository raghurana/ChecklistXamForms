<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:markupx="clr-namespace:ChecklistTest.MarkupExtensions;assembly=ChecklistTest"
             xmlns:customCells="clr-namespace:ChecklistTest.Cells;assembly=ChecklistTest"
             xmlns:converters="clr-namespace:ChecklistTest.ValueConverters;assembly=ChecklistTest"
             xmlns:views="clr-namespace:ChecklistTest.Views;assembly=ChecklistTest"
             x:Class="ChecklistTest.Pages.ChecklistPage"
             x:Name="MyChecklistPage">

  <ContentPage.Resources>
    <ResourceDictionary>

      <Style TargetType="BoxView">
        <Setter Property="HeightRequest" Value="1" />
        <Setter Property="Color" Value="Gray" />
      </Style>

      <converters:NullToDefaultPlaceholderConverter x:Key="NullToDefaultPlaceholderConverter" />

      <!-- Template for boolean checklists -->
      <DataTemplate x:Key="BooleanTemplate">
        <ViewCell>
          <StackLayout>
            <StackLayout Orientation="Horizontal">
              <Image Source="icon.png" />
              <Label Text="{Binding LabelText}" VerticalOptions="Center" />
            </StackLayout>
            <!-- Comment Entry -->
            <Entry Text="{Binding CommentValue, Mode=TwoWay}"
                   IsVisible="{Binding HasComment}"
                   Placeholder="Comment..." />
            <BoxView />
          </StackLayout>
        </ViewCell>
    </DataTemplate>

      <!-- Template for non - boolean checklists -->
      <DataTemplate x:Key="NonBooleanTemplate">
        <ViewCell>
          <StackLayout Spacing="0" >
            
            <!-- Header Text -->
            <Label x:Name="HeaderTextLabel"
                   Text="{Binding LabelText}"
                   FontAttributes="Bold"
                   FontSize="Large">
              <Label.Triggers>
                <DataTrigger TargetType="Label" Binding="{Binding IsMandatory}" Value="True">
                  <Setter Property="BackgroundColor" Value="Yellow" />
                  <Setter Property="TextColor" Value="Black" />
                </DataTrigger>
              </Label.Triggers>
            </Label>

            <BoxView />

            <!-- Look Up Label -->
            <Label IsVisible="{Binding IsLookup}"
                   Text="{Binding DataValue, Converter={StaticResource NullToDefaultPlaceholderConverter}}" >
              <Label.GestureRecognizers>
                <TapGestureRecognizer
                  Command="{Binding LookupItemTapped, Source={x:Reference MyChecklistPage}}"
                  CommandParameter="{Binding .}" />
              </Label.GestureRecognizers>
            </Label>

            <!-- DatePicker -->
            <DatePicker IsVisible="{Binding IsDate}" />

            <!-- TimePicker -->
            <TimePicker IsVisible="{Binding IsTime}" />
            
            <!-- Text Label -->
            <Entry IsVisible="{Binding IsTextual}"
                   Placeholder="{Binding DataValue, Converter={StaticResource NullToDefaultPlaceholderConverter}}"
                   Text="{Binding DataValue, Mode=TwoWay}" />

            <!-- Numeric Label -->
            <Entry IsVisible="{Binding IsNumeric}"
                   Keyboard="Numeric"
                   Placeholder="{Binding DataValue, Converter={StaticResource NullToDefaultPlaceholderConverter}}"
                   Text="{Binding DataValue, Mode=TwoWay}" />

            <!-- Comment Entry -->
            <Entry Text="{Binding CommentValue, Mode=TwoWay}"
                   IsVisible="{Binding HasComment}"
                   Placeholder="Comment..." />
              
            <BoxView />

          </StackLayout>
        </ViewCell>
      </DataTemplate>

    </ResourceDictionary>
  </ContentPage.Resources>

  <views:CustomListView
    SeparatorVisibility="None"
    HasUnevenRows="true"
    ItemsSource="{Binding CheckListItems}"
    ItemTemplate="{markupx:ChecklistTemplateSelector Page={x:Reference MyChecklistPage}}">

    <views:CustomListView.Footer>
      <Button 
        Text="Complete Inspection"
        Command="{Binding Path=BindingContext.CompleteCommand, Source={x:Reference MyChecklistPage}}" />
    </views:CustomListView.Footer>

  </views:CustomListView>

</ContentPage>